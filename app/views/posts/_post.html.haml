.group-post.post{data: {id: post.id}}
  .post-actions.pull-right
  -if false
    .pull-left.user-avathar= render partial: 'users/user_details', locals: {user: post.user}
  .post-actions
    - unless params[:preview]
      - if current_user == post.user
        = link_to 'delete', post_path(post), remote: true, method: :delete, class: 'delete-post pull-right delete-question'
        - unless post.group
          = link_to 'we are free', '#', class: "feature free pull-right #{post.lat.nil? ? '' : 'd-none'}"
        = link_to 'we are busy', '#', class: "feature busy pull-right #{post.lat.present? ? '' : 'd-none'}"
        = link_to 'edit', edit_post_path(post), remote: true, class: 'edit-post-link'
      - if (current_user.try :admin?)
        - if post.featured?
          = render partial: 'unpin', locals: {post: post}
        - else
          = render partial: 'pin', locals: {post: post}
  .clearfix
  .post-title
    - if post.project.present?
      %h1= link_to post.title, group_path(post.project)
    - else
      %h1= link_to post.title, "/#{post.id}"
  .clearfix
  .edit-container 
  .post-body
    .clearfix 
    .post-text  
      = raw(post.text)
    
    .phones-container
      - post.phones.order('updated_at desc').each do |g|
        = render partial: 'phones/phone', locals: {phone: g}
    
    
    - unless params[:preview]
      - if post.user == current_user
        = link_to 'add phone', new_phone_path(post_id: post.id), remote: true, class: 'new-phone'
        .clearfix
        .phone-form-container
    .clearfix

    .galeries-container
      - post.galeries.order('updated_at desc').each do |g|
        = render partial: 'galeries/galery', locals: {galery: g}
    
    
    - unless params[:preview]
      - if post.user == current_user
        = link_to 'add galery', new_galery_path(post_id: post.id), remote: true, class: 'new-galery'
        .clearfix
        .galery-form-container
    .clearfix
    - unless params[:preview]  
      = render partial: 'groups/selection', locals: {post: post}
    - unless current_user && current_user.groups.map(&:id).include?(post.project_id)
      .project-container{data: {id: post.project_id}}
    - unless params[:preview]
      = render partial: 'surveys/selection', locals: {post: post}
    .survey-container{data: {id: post.survey_id, anonymous: post.survey.try(:anonymous).present?.to_s}}
    - unless params[:preview]
      = render partial: 'quick_polls/selection', locals: {post: post}
    .quick-poll-container{data: {id: post.quick_poll_id}}
    
    .clearfix
  - if post.enable_comment_vote?
    = render partial: 'posts/comment_actions', locals: {post: post}
    .clearfix
    .new-comment
    .comments-container{class: params[:comment_id].present? ? '' : 'd-none'}
      .comments
        - if params[:comment_id]
          - comment = post.comments.find(params[:comment_id])
        - if comment
          = render partial: 'posts/comments/comment', locals: {expand: true, new: false, comment: comment.parent || comment}
    
  