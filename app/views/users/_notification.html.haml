= raw_message = nil
- target = notification.target
- if target.is_a?(Comment)
  - if target.post.group_id.present?
    - bindings = {'url' => link_to('commented', group_post_path(target.post.group, target.post, comment_id: target.parent_id)), 'post' => link_to('post', group_post_path(target.post.group, target.post, comment_id: target.parent_id)), 'user' => link_to(target.user.name, posts_user_path(target.user))}
  - else
    - bindings = {'url' => link_to('commented', post_path(target.post, comment_id: target.parent_id)), 'post' => link_to(target.post.title, post_path(target.post, comment_id: target.parent_id)), 'user' => link_to(target.user.name, posts_user_path(target.user))}
- elsif target.is_a?(Post)
  - if target.group_id.present?
    - bindings = {'user' => link_to(target.user.name, posts_users_path(target.user)), 'url' => link_to(target.title, group_post_path(target.group, target)), 'group' => " on school group #{target.group.name}"}
  - else
    - bindings = {'user' => link_to(target.user.name, posts_user_path(target.user)), 'url' => link_to(target.title, post_path(target)), 'group' => ''}
- elsif target.is_a?(Connection)
  - bindings = {'user1' => link_to(target.to_user.name, posts_user_path(target.to_user)), 'user2' => link_to(target.user.name, posts_user_path(target.user))}
- elsif target.is_a?(Response)
  - bindings = {'user' => link_to(target.user.name, user_path(target.user)), 'url' => link_to('check', dashboard_path)}
- elsif target.is_a?(Vote)
  - bindings = {url: link_to(target.comment ? 'Comment' : target.post.title, post_path(target.post, comment_id: target.comment.try(:parent_id))), 'user' => link_to(target.user.name, posts_user_path(target.user)), 'type' => target.weight == 1 ? 'upvot' : 'downvot'}
- else
  - raw_message = notification.message
.question
  .question-text
    = raw(raw_message || Notification.new.generate_msg(notification.target, notification.action, bindings))
