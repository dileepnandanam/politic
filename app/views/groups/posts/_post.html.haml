.group-post.post{class: post_class(post)}
  .post-actions
    - unless params[:preview]
      - if post.user == current_user || (current_user.try :admin?)
        = link_to 'Delete', group_post_path(@group, post), remote: true, method: :delete, class: 'delete-post pull-right delete-question', data: {confirm: "Are you sure?"}
        = link_to 'Edit', edit_group_post_path(@group, post), remote: true, class: 'edit-post-link'

  .clearfix
  .clearfix
  .edit-container
  .post-title
    %h1.black.name= post.title
  .clearfix
  .post-body
    .post-text
      = raw(post.text)


    .videos-container
      = render partial: 'videos/videos', locals: {post: post}

    - unless params[:preview]
      - if post.user == current_user
        = link_to 'Add video', new_video_path(post_id: post.id), remote: true, class: 'add-video pull-right'
    .clearfix
    
    
    
    .galeries-container
      - post.galeries.order('updated_at desc').each do |g|
        = render partial: 'galeries/galery', locals: {galery: g, post: post}

    .galery-form-container
    .clearfix
    - unless params[:preview]
      - if post.user == current_user
        = link_to 'Add galery', new_galery_path(post_id: post.id), remote: true, class: 'new-galery'
        .clearfix
        

    - unless params[:preview]
      = render partial: 'groups/selection', locals: {post: post}
    - unless current_user && current_user.groups.map(&:id).include?(post.project_id)
      .project-container{data: {id: post.project_id}}
    - unless params[:preview]
      = render partial: 'surveys/selection', locals: {post: post}
    .survey-container{data: {id: post.survey_id, anonymous: post.survey.try(:anonymous).present?.to_s}}
    - unless params[:preview]
      = render partial: 'quick_polls/selection', locals: {post: post}
    .quick-poll-container{data: {id: post.quick_poll_id}}
    
  -if post.enable_comment_vote?
    = render partial: 'groups/posts/comment_actions', locals: {post: post}
    .clearfix
    .new-comment
    .comments-container{class: params[:comment_id].present? ? '' : 'd-none'}
      .comments
        - if params[:comment_id]
          - comment = post.comments.find(params[:comment_id])
        - if comment
          = render partial: 'posts/comments/comment', locals: {expand: true, new: false, comment: comment.parent || comment}
    
  - if edit_mode post
    .default= "path: #{post_path(post)}"
